[{"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\index.js":"1","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\App.js":"2","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\Navbar.jsx":"3","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\pages\\Acteurs.jsx":"4","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\Footer.jsx":"5","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\pages\\NotFound.jsx":"6","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\pages\\ActeursDetail.jsx":"7","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\contexte\\BreakContexte.jsx":"8","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\pages\\Home.jsx":"9","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\AlertName.jsx":"10","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\Spinner.jsx":"11","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\Acteur.jsx":"12","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\contexte\\BreakReducer.jsx":"13"},{"size":221,"mtime":1646941119784,"results":"14","hashOfConfig":"15"},{"size":810,"mtime":1674303171129,"results":"16","hashOfConfig":"15"},{"size":3284,"mtime":1675019489192,"results":"17","hashOfConfig":"15"},{"size":1982,"mtime":1675012600391,"results":"18","hashOfConfig":"15"},{"size":2449,"mtime":1674692844330,"results":"19","hashOfConfig":"15"},{"size":802,"mtime":1648828234366,"results":"20","hashOfConfig":"15"},{"size":1064,"mtime":1675019423963,"results":"21","hashOfConfig":"15"},{"size":3222,"mtime":1675015057363,"results":"22","hashOfConfig":"15"},{"size":1557,"mtime":1675022874565,"results":"23","hashOfConfig":"15"},{"size":1319,"mtime":1675012612160,"results":"24","hashOfConfig":"15"},{"size":277,"mtime":1648597747036,"results":"25","hashOfConfig":"15"},{"size":4419,"mtime":1675019490485,"results":"26","hashOfConfig":"15"},{"size":954,"mtime":1675011734089,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8larid",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\index.js",[],[],"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\App.js",[],[],"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\Navbar.jsx",["72","73","74"],[],"import React, { useContext, useEffect } from \"react\";\r\nimport { BreakContexte } from \"../contexte/BreakContexte\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const {\r\n    fetchByName,\r\n    fetchActeur,\r\n    acteurs,\r\n    name,\r\n    setName,\r\n    clearnomActeur,\r\n    nameSear,\r\n    setNameSear,\r\n    acteur,\r\n    acteurNom,\r\n  } = useContext(BreakContexte);\r\n\r\n  const navigate = useNavigate();\r\n  const change = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  // Pour avoir le nameSear et l'utiliser dans fetchByName\r\n  const getSearchName = () => {\r\n    if (name !== \"\") {\r\n      acteurs.filter((acte) => {\r\n        if (acte.login.toLowerCase().includes(name.toLowerCase())) {\r\n          setNameSear(acte.login);\r\n        }\r\n      });\r\n    } else {\r\n      setNameSear(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (nameSear && nameSear !== \"\") {\r\n      fetchByName(nameSear);\r\n    }\r\n  }, [nameSear]);\r\n  getSearchName();\r\n\r\n  const rechercher = () => {\r\n    fetchActeur(nameSear);\r\n    navigate(`/acteurs/${acteur.login}`);\r\n    setName(\"\");\r\n  };\r\n\r\n  const supprimer = () => {\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar flex flex-col justify-between sm:flex-row bg-info-content px-4\">\r\n      <div>\r\n        <p className=\"normal-case text-md md:text-xl mb-2 sm:mb-0 text-white\">\r\n          GITHUB\r\n        </p>\r\n      </div>\r\n      <div className=\"justify-end flex-none gap-2 mb-2 sm:mb-0\">\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Chercher par nom\"\r\n            value={name}\r\n            onChange={change}\r\n            className=\"input input-bordered input-sm\"\r\n          />\r\n        </div>\r\n        <div className={name === \"\" ? \"invisible\" : \"visible\"}>\r\n          <button\r\n            className=\"inline-flex animate-pulse items-center p-2 bg-red-600 hover:bg-red-700 text-white text-sm font-medium rounded-md\"\r\n            onClick={() => supprimer()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <button\r\n          className=\"flex items-center justify-center px-4 border-l\"\r\n          disabled={name === \"\" || acteurNom.login === undefined ? true : false}\r\n          onClick={() => rechercher()}\r\n        >\r\n          <svg\r\n            className={`w-6 h-6 text-gray-600 ${\r\n              name !== \"\" && \"text-gray-200\"\r\n            }`}\r\n            fill=\"currentColor\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\pages\\Acteurs.jsx",["75","76"],[],"import React, { useContext, useEffect } from \"react\";\r\nimport { BreakContexte } from \"../contexte/BreakContexte\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertName from \"../components/AlertName\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst Acteurs = () => {\r\n  const { fetchActeurs, acteurs, loading } = useContext(BreakContexte);\r\n  useEffect(() => {\r\n    fetchActeurs();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner classname={\"mt-32\"} />\r\n      ) : (\r\n        <>\r\n          <AlertName />\r\n          <div className=\"pt-4 pb-44 sm:pb-32 px-6 grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3 text-center\">\r\n            {acteurs.map((acteur) => {\r\n              const { id, login, avatar_url } = acteur;\r\n              return (\r\n                <div\r\n                  key={id}\r\n                  className=\"card card-side px-2 bg-secondary-content shadow-2xl\"\r\n                >\r\n                  <div className=\"avatar my-auto\">\r\n                    <div className=\"mask mask-squircle w-36 h-36\">\r\n                      <img\r\n                        className=\"object-top\"\r\n                        src={avatar_url}\r\n                        alt=\"Photo\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <h2 className=\"card-title m-auto\">\r\n                      Login: <span className=\"text-red-600\">{login}</span>\r\n                    </h2>\r\n                    <div className=\"card-actions m-auto\">\r\n                      <Link to={`/acteurs/${login}`}>\r\n                        <button className=\"btn btn-outline btn-primary\">\r\n                          Plus\r\n                        </button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Acteurs;\r\n","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\Footer.jsx",["77","78","79","80"],[],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer-center items-center grid grid-cols-1 xl:grid-cols-3 lr:grid-cols-3 md:grid-cols-3 text-white bg-neutral-focus fixed bottom-0 w-full py-4 px-8\">\r\n      <div className=\"mx-auto\">\r\n        <p>Copyright © 2022 - Tous droits réservés</p>\r\n      </div>\r\n      <div>\r\n        <div className=\"inline\"> API utiliser dans ce projet </div>\r\n        <a href=\"https://api.github.com/users\" target=\"_blank\">\r\n          <p className=\"sm:text-2xl text-neutral hover:text-green-700 sm:inline ml-2 text-base block\">\r\n            {\" \"}\r\n            Visitez le LIEN{\" \"}\r\n          </p>\r\n        </a>\r\n      </div>\r\n\r\n      <div>\r\n        <span className=\"footer-title\">Social</span>\r\n        <div className=\"grid grid-flow-col gap-4\">\r\n          <a>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"fill-current\"\r\n            >\r\n              <path d=\"M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z\" />\r\n            </svg>\r\n          </a>\r\n          <a>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"fill-current\"\r\n            >\r\n              <path d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path>\r\n            </svg>\r\n          </a>\r\n          <a>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"fill-current\"\r\n            >\r\n              <path d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path>\r\n            </svg>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\pages\\NotFound.jsx",[],[],"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\pages\\ActeursDetail.jsx",["81","82"],[],"import React, { useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Acteur from \"../components/Acteur\";\r\nimport { BreakContexte } from \"../contexte/BreakContexte\";\r\nimport AlertName from \"../components/AlertName\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst ActeursDetail = () => {\r\n  const { login } = useParams();\r\n\r\n  const {\r\n    loading,\r\n    acteurNom,\r\n    fetchActeur,\r\n    acteur,\r\n    followers,\r\n    following,\r\n    clearActeur,\r\n  } = useContext(BreakContexte);\r\n\r\n  useEffect(() => {\r\n    if (login !== \"\") {\r\n      fetchActeur(login);\r\n    }\r\n    return () => {\r\n      clearActeur();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AlertName />\r\n      </div>\r\n      {loading ? (\r\n        <Spinner classname={\"mt-32\"} />\r\n      ) : (\r\n        <>\r\n          <Acteur\r\n            followerse={followers}\r\n            followings={following}\r\n            login={login}\r\n            acteur={acteur}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActeursDetail;\r\n","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\contexte\\BreakContexte.jsx",[],[],"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\pages\\Home.jsx",["83","84"],[],"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\AlertName.jsx",[],[],"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\Spinner.jsx",[],[],"C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\components\\Acteur.jsx",["85"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Acteur = ({ acteur, followerse, followings }) => {\r\n  const {\r\n    name,\r\n    login,\r\n    avatar_url,\r\n    location,\r\n    followers,\r\n    following,\r\n    created_at,\r\n    public_repos,\r\n    email,\r\n  } = acteur;\r\n\r\n  const navigate = useNavigate();\r\n  const retour = () => {\r\n    navigate(\"/acteurs\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-[100vh] items-start justify-center from-yellow-200 via-red-300 to-blue-300 bg-gradient-to-br shadow-2xl\">\r\n      <div className=\"bg-white md:w-[700px] shadow-md rounded-md px-6 py-4 mx-6 lg:mt-[90px] mt-[30px] mb-[100px]\">\r\n        <div className=\"sm:flex sm:justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <img\r\n              className=\"h-12 w-12 rounded-full\"\r\n              src={avatar_url}\r\n              alt={avatar_url}\r\n            />\r\n            <div className=\"ml-2\">\r\n              <h3 className=\"text-lg text-gray-800 font-medium\">{name}</h3>\r\n              <span className=\"text-gray-600\">{email}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-2 sm:mt-0\">\r\n            <button className=\"flex items-center text-white bg-blue-600 rounded px-2 py-1 hover:bg-blue-500 focus:outline-none focus:shadow-outline\">\r\n              <svg\r\n                className=\"h-5 w-5\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n              </svg>\r\n              <span className=\"ml-1 text-sm\" onClick={() => retour()}>\r\n                return\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between items-center mt-4\">\r\n          <div>\r\n            <h4 className=\"text-gray-600 text-sm\">Login</h4>\r\n            <span className=\"mt-2 text-xl font-medium text-gray-800\">\r\n              {login}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <h4 className=\"text-gray-600 text-sm\">Submissions</h4>\r\n            <span className=\"mt-2 text-xl font-medium text-gray-800\">\r\n              12171\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <h4 className=\"text-gray-600 text-sm\">Location</h4>\r\n            <span className=\"mt-2 text-xl font-medium text-gray-800\">\r\n              {location}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-3\">\r\n          <h4 className=\"text-gray-600 text-sm\">created_at</h4>\r\n          <span className=\"mt-2 text-xl font-medium text-gray-800\">\r\n            {created_at}\r\n          </span>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <h4 className=\"text-sm text-gray-600\">{followers} Followers</h4>\r\n          <div className=\"flex items-center overflow-hidden mt-2\">\r\n            {followerse.map((folow) => {\r\n              const { id, avatar_url } = folow;\r\n              return (\r\n                <>\r\n                  <img\r\n                    key={id}\r\n                    className=\"-ml-2 inline-block h-6 w-6 rounded-full text-white border-2 border-white object-cover object-center\"\r\n                    src={avatar_url}\r\n                    alt=\"followers\"\r\n                  />\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <h4 className=\"text-sm text-gray-600\">{following} Following</h4>\r\n          <div className=\"flex items-center overflow-hidden mt-2\">\r\n            {followings.map((folow) => {\r\n              const { id, avatar_url } = folow;\r\n              return (\r\n                <>\r\n                  <img\r\n                    key={id}\r\n                    className=\"-ml-2 inline-block h-6 w-6 rounded-full text-white border-2 border-white object-cover object-center\"\r\n                    src={avatar_url}\r\n                    alt=\"followings\"\r\n                  />\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <a className=\"block mt-4 text-blue-400 hover:underline\" href=\"#\">\r\n          {public_repos} Public repository\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Acteur;\r\n","C:\\Users\\dell\\Desktop\\acteursbreakingbad\\src\\contexte\\BreakReducer.jsx",[],[],{"ruleId":"86","severity":1,"message":"87","line":12,"column":5,"nodeType":"88","messageId":"89","endLine":12,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":27,"column":29,"nodeType":"92","messageId":"93","endLine":27,"endColumn":31},{"ruleId":"94","severity":1,"message":"95","line":41,"column":6,"nodeType":"96","endLine":41,"endColumn":16,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":11,"column":6,"nodeType":"96","endLine":11,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":29,"column":23,"nodeType":"102","endLine":33,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":11,"column":9,"nodeType":"102","messageId":"105","endLine":11,"endColumn":64,"fix":"106"},{"ruleId":"107","severity":1,"message":"108","line":22,"column":11,"nodeType":"102","endLine":22,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":33,"column":11,"nodeType":"102","endLine":33,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":44,"column":11,"nodeType":"102","endLine":44,"endColumn":14},{"ruleId":"86","severity":1,"message":"109","line":13,"column":5,"nodeType":"88","messageId":"89","endLine":13,"endColumn":14},{"ruleId":"94","severity":1,"message":"110","line":28,"column":6,"nodeType":"96","endLine":28,"endColumn":8,"suggestions":"111"},{"ruleId":"86","severity":1,"message":"112","line":1,"column":40,"nodeType":"88","messageId":"89","endLine":1,"endColumn":48},{"ruleId":"94","severity":1,"message":"98","line":9,"column":6,"nodeType":"96","endLine":9,"endColumn":8,"suggestions":"113"},{"ruleId":"107","severity":1,"message":"114","line":118,"column":9,"nodeType":"102","endLine":118,"endColumn":74},"no-unused-vars","'clearnomActeur' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchByName'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'fetchActeurs'. Either include it or remove the dependency array.",["116"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"117","text":"118"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'acteurNom' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clearActeur', 'fetchActeur', and 'login'. Either include them or remove the dependency array.",["119"],"'useState' is defined but never used.",["120"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},[488,488]," rel=\"noreferrer\"",{"desc":"125","fix":"126"},{"desc":"123","fix":"127"},"Update the dependencies array to be: [fetchByName, nameSear]",{"range":"128","text":"129"},"Update the dependencies array to be: [fetchActeurs]",{"range":"130","text":"131"},"Update the dependencies array to be: [clearActeur, fetchActeur, login]",{"range":"132","text":"133"},{"range":"134","text":"131"},[930,940],"[fetchByName, nameSear]",[400,402],"[fetchActeurs]",[664,666],"[clearActeur, fetchActeur, login]",[350,352]]