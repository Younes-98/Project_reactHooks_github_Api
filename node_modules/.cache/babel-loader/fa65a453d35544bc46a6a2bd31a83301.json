{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\acteursbreakingbad\\\\src\\\\components\\\\Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { BreakContexte } from \"../contexte/BreakContexte\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [newlist, setNewlist] = useState([]);\n  const {\n    fetchByName,\n    acteurs,\n    name,\n    setName,\n    clearnomActeur,\n    nameSear,\n    setNameSear,\n    acteurNom,\n    fetchActeur\n  } = useContext(BreakContexte);\n  const navigate = useNavigate();\n\n  const change = e => {\n    setName(e.target.value);\n    console.log(e.target.value);\n  }; // Pour avoir le nameSear et l'utiliser dans fetchByName\n\n\n  const getSearchName = () => {\n    // acteurs.map((act) => {\n    //   if (name !== \"\") {\n    // if (act.login.toLowerCase().includes(name.toLowerCase())) {\n    //   setNameSear(act.login);\n    // }\n    //   }\n    // });\n    if (name !== \"\") {\n      acteurs.filter(acte => {\n        console.log(acte.login.toLowerCase().includes(name.toLowerCase())); // Object.values(acte)\n        //   .join(\" \")\n        //   .toLowerCase()\n        //   .includes(name.toLowerCase())\n      }); // setNewlist(tablActr);\n    }\n  };\n\n  useEffect(() => {\n    if (nameSear && nameSear !== \"\") {\n      fetchByName(nameSear);\n    }\n\n    return () => {\n      clearnomActeur();\n    };\n  }, [nameSear]);\n  getSearchName();\n\n  const rechercher = () => {\n    navigate(`/acteurs/${acteurNom.char_id}`);\n    setName(\"\"); // acteur = {...acteurNom}\n\n    fetchActeur(acteurNom.char_id);\n  };\n\n  const supprimer = () => {\n    setName(\"\");\n  }; // console.log(acteurNom)\n  // console.log(nameSear)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar flex flex-col justify-between sm:flex-row bg-info-content px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"normal-case text-md md:text-xl mb-2 sm:mb-0 text-white\",\n        children: \"GITHUB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-end flex-none gap-2 mb-2 sm:mb-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Chercher par nom\",\n          value: name,\n          onChange: change,\n          className: \"input input-bordered input-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: name === \"\" ? \"invisible\" : \"visible\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"inline-flex animate-pulse items-center p-2 bg-red-600 hover:bg-red-700 text-white text-sm font-medium rounded-md\",\n          onClick: () => supprimer(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flex items-center justify-center px-4 border-l\",\n        disabled: name === \"\" || acteurNom.name === undefined ? true : false,\n        onClick: () => rechercher(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: `w-6 h-6 text-gray-600 ${name !== \"\" && \"text-gray-200\"}`,\n          fill: \"currentColor\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"D+OTClBNO6nt8A5V2obxEKXNNhY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/acteursbreakingbad/src/components/Navbar.jsx"],"names":["React","useContext","useEffect","BreakContexte","useNavigate","useState","Navbar","newlist","setNewlist","fetchByName","acteurs","name","setName","clearnomActeur","nameSear","setNameSear","acteurNom","fetchActeur","navigate","change","e","target","value","console","log","getSearchName","filter","acte","login","toLowerCase","includes","rechercher","char_id","supprimer","undefined"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { BreakContexte } from \"../contexte/BreakContexte\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst Navbar = () => {\r\n  const [newlist, setNewlist] = useState([]);\r\n  const {\r\n    fetchByName,\r\n    acteurs,\r\n    name,\r\n    setName,\r\n    clearnomActeur,\r\n    nameSear,\r\n    setNameSear,\r\n    acteurNom,\r\n    fetchActeur,\r\n  } = useContext(BreakContexte);\r\n\r\n  const navigate = useNavigate();\r\n  const change = (e) => {\r\n    setName(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  // Pour avoir le nameSear et l'utiliser dans fetchByName\r\n  const getSearchName = () => {\r\n    // acteurs.map((act) => {\r\n    //   if (name !== \"\") {\r\n    // if (act.login.toLowerCase().includes(name.toLowerCase())) {\r\n    //   setNameSear(act.login);\r\n    // }\r\n\r\n    //   }\r\n    // });\r\n    if (name !== \"\") {\r\n      acteurs.filter((acte) => {\r\n        console.log(acte.login.toLowerCase().includes(name.toLowerCase()));\r\n        // Object.values(acte)\r\n        //   .join(\" \")\r\n        //   .toLowerCase()\r\n        //   .includes(name.toLowerCase())\r\n      });\r\n      // setNewlist(tablActr);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (nameSear && nameSear !== \"\") {\r\n      fetchByName(nameSear);\r\n    }\r\n    return () => {\r\n      clearnomActeur();\r\n    };\r\n  }, [nameSear]);\r\n  getSearchName();\r\n\r\n  const rechercher = () => {\r\n    navigate(`/acteurs/${acteurNom.char_id}`);\r\n    setName(\"\");\r\n    // acteur = {...acteurNom}\r\n    fetchActeur(acteurNom.char_id);\r\n  };\r\n\r\n  const supprimer = () => {\r\n    setName(\"\");\r\n  };\r\n\r\n  // console.log(acteurNom)\r\n  // console.log(nameSear)\r\n\r\n  return (\r\n    <div className=\"navbar flex flex-col justify-between sm:flex-row bg-info-content px-4\">\r\n      <div>\r\n        <p className=\"normal-case text-md md:text-xl mb-2 sm:mb-0 text-white\">\r\n          GITHUB\r\n        </p>\r\n      </div>\r\n      <div className=\"justify-end flex-none gap-2 mb-2 sm:mb-0\">\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Chercher par nom\"\r\n            value={name}\r\n            onChange={change}\r\n            className=\"input input-bordered input-sm\"\r\n          />\r\n        </div>\r\n        <div className={name === \"\" ? \"invisible\" : \"visible\"}>\r\n          <button\r\n            className=\"inline-flex animate-pulse items-center p-2 bg-red-600 hover:bg-red-700 text-white text-sm font-medium rounded-md\"\r\n            onClick={() => supprimer()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <button\r\n          className=\"flex items-center justify-center px-4 border-l\"\r\n          disabled={name === \"\" || acteurNom.name === undefined ? true : false}\r\n          onClick={() => rechercher()}\r\n        >\r\n          <svg\r\n            className={`w-6 h-6 text-gray-600 ${\r\n              name !== \"\" && \"text-gray-200\"\r\n            }`}\r\n            fill=\"currentColor\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}