{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\web\\\\Feedback-Hooks\\\\acteursbreakingbad\\\\src\\\\contexte\\\\BreakContexte.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nimport BreakReducer from './BreakReducer';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BreakContexte = /*#__PURE__*/createContext();\n\nconst BreakProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState('true');\n  const initialState = {\n    acteurs: [],\n    acteur: {}\n  };\n  const [state, dispatch] = useReducer(BreakReducer, initialState);\n\n  const fetchActeurs = async () => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get('https://www.breakingbadapi.com/api/characters'); // console.table(response.data)\n\n      dispatch({\n        type: 'GET_ACTEURS',\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const fetchActeur = async id => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(`https://www.breakingbadapi.com/api/characters/${id}`);\n      dispatch({\n        type: 'GET_ACTEUR',\n        payload: response.data\n      });\n      console.log(response.data[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const clearActeur = () => {\n    dispatch({\n      type: 'REMOVE_ACTEUR'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BreakContexte.Provider, {\n    value: {\n      fetchActeurs,\n      acteurs: state.acteurs,\n      fetchActeur,\n      acteur: state.acteur,\n      clearActeur\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BreakProvider, \"ImvWSNvFAS6Zp8CIMgena43Bo9s=\");\n\n_c = BreakProvider;\nexport default BreakProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreakProvider\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/web/Feedback-Hooks/acteursbreakingbad/src/contexte/BreakContexte.jsx"],"names":["React","createContext","useState","axios","BreakReducer","useReducer","BreakContexte","BreakProvider","children","loading","setLoading","initialState","acteurs","acteur","state","dispatch","fetchActeurs","response","get","type","payload","data","error","console","log","fetchActeur","id","clearActeur"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAIA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,EAAnC;;AAEP,MAAMM,aAAa,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,MAAD,CAAtC;AAEA,QAAMS,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,EADU;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAArB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACD,YAAD,EAAeO,YAAf,CAApC;;AAGA,QAAMK,YAAY,GAAG,YAAW;AAC5BN,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMO,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,+CAAV,CAAvB,CADA,CAEA;;AACAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,aADC;AAEPC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACDZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAbD;;AAeA,QAAMe,WAAW,GAAG,MAAMC,EAAN,IAAa;AAC/BhB,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMO,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,iDAAgDQ,EAAG,EAA9D,CAAvB;AACAX,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,OAAD,CAAR;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACI,IAAT,CAAc,CAAd,CAAZ;AACD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAZD;;AAcA,QAAMK,WAAW,GAAG,MAAM;AACxBZ,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAC3B;AACEH,MAAAA,YADF;AAEEJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFjB;AAGEa,MAAAA,WAHF;AAIEZ,MAAAA,MAAM,EAAEC,KAAK,CAACD,MAJhB;AAKEc,MAAAA;AALF,KADF;AAAA,cASKnB;AATL;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxDD;;GAAMD,a;;KAAAA,a;AA0DN,eAAeA,aAAf","sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport axios from 'axios'\r\nimport BreakReducer from './BreakReducer'\r\nimport { useReducer } from 'react';\r\n\r\n\r\n\r\nexport const BreakContexte = createContext();\r\n\r\nconst BreakProvider = ({children}) => {\r\n  const [loading, setLoading] = useState('true')\r\n\r\n  const initialState = {\r\n    acteurs: [],\r\n    acteur: {},\r\n  }\r\n  const [state, dispatch] = useReducer(BreakReducer, initialState);\r\n\r\n\r\n  const fetchActeurs = async() => {\r\n      setLoading(true);\r\n      try {\r\n          const response = await axios.get('https://www.breakingbadapi.com/api/characters')\r\n          // console.table(response.data)\r\n          dispatch({\r\n            type: 'GET_ACTEURS',\r\n            payload: response.data,\r\n          })\r\n      } catch (error) {\r\n          console.log(error)\r\n      }  \r\n      setLoading(false);    \r\n  }\r\n\r\n  const fetchActeur = async(id) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`https://www.breakingbadapi.com/api/characters/${id}`);\r\n      dispatch({\r\n        type: 'GET_ACTEUR',\r\n        payload: response.data,\r\n      })\r\n      console.log(response.data[0])\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const clearActeur = () => {\r\n    dispatch({type: 'REMOVE_ACTEUR'})\r\n  }\r\n\r\n  return (\r\n    <BreakContexte.Provider value={\r\n      {\r\n        fetchActeurs,\r\n        acteurs: state.acteurs,\r\n        fetchActeur,\r\n        acteur: state.acteur,\r\n        clearActeur,\r\n      }\r\n    }>\r\n        {children}\r\n    </BreakContexte.Provider>\r\n  )\r\n}\r\n\r\nexport default BreakProvider"]},"metadata":{},"sourceType":"module"}