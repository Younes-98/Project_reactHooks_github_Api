{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\web\\\\Feedback-Hooks\\\\acteursbreakingbad\\\\src\\\\contexte\\\\BreakContexte.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BreakContexte = /*#__PURE__*/createContext();\n\nconst BreakProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState('true');\n  const initialState = {\n    acteurs: []\n  };\n  const [state, dispatch] = useReducer(BreakReducer, initialState);\n\n  const fetchActeurs = async () => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get('https://www.breakingbadapi.com/api/characters');\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BreakContexte.Provider, {\n    value: {\n      loading,\n      setLoading,\n      fetchActeurs\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BreakProvider, \"ImvWSNvFAS6Zp8CIMgena43Bo9s=\");\n\n_c = BreakProvider;\nexport default BreakProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreakProvider\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/web/Feedback-Hooks/acteursbreakingbad/src/contexte/BreakContexte.jsx"],"names":["React","createContext","useState","axios","BreakContexte","BreakProvider","children","loading","setLoading","initialState","acteurs","state","dispatch","useReducer","BreakReducer","fetchActeurs","response","get","console","log","data","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;;AAEP,MAAMI,aAAa,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,MAAD,CAAtC;AAEA,QAAMO,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE;AADU,GAArB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,UAAU,CAACC,YAAD,EAAeL,YAAf,CAApC;;AAEA,QAAMM,YAAY,GAAG,YAAW;AAC5BP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMQ,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,+CAAV,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH;;AACDb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GATD;;AAUA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACD,MAAAA,OAAD;AAAUC,MAAAA,UAAV;AAAsBO,MAAAA;AAAtB,KAA/B;AAAA,cACKT;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMD,a;;KAAAA,a;AA0BN,eAAeA,aAAf","sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const BreakContexte = createContext();\r\n\r\nconst BreakProvider = ({children}) => {\r\n  const [loading, setLoading] = useState('true')\r\n\r\n  const initialState = {\r\n    acteurs: [],\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(BreakReducer, initialState);\r\n\r\n  const fetchActeurs = async() => {\r\n      setLoading(true);\r\n      try {\r\n          const response = await axios.get('https://www.breakingbadapi.com/api/characters')\r\n          console.log(response.data)\r\n      } catch (error) {\r\n          console.log(error)\r\n      }  \r\n      setLoading(false);\r\n  }\r\n  return (\r\n    <BreakContexte.Provider value={{loading, setLoading, fetchActeurs}}>\r\n        {children}\r\n    </BreakContexte.Provider>\r\n  )\r\n}\r\n\r\nexport default BreakProvider"]},"metadata":{},"sourceType":"module"}