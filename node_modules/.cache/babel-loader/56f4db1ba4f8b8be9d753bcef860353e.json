{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\web\\\\Feedback-Hooks\\\\acteursbreakingbad\\\\src\\\\components\\\\Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BreakContexte } from '../contexte/BreakContexte';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const {\n    fetchByName,\n    acteurs,\n    name,\n    setName,\n    clearnomActeur,\n    nameSear,\n    setNameSear,\n    acteurNom,\n    acteur,\n    fetchActeur,\n    loading,\n    setLoading\n  } = useContext(BreakContexte);\n  const navigate = useNavigate();\n\n  const change = e => {\n    setName(e.target.value);\n  };\n\n  console.log(name);\n  useEffect(() => {\n    if (nameSear && nameSear !== '') {\n      fetchByName(nameSear);\n    }\n\n    return () => {\n      clearnomActeur();\n    };\n  }, [nameSear]);\n\n  const Go = () => {\n    navigate(`/acteurs/${acteurNom.char_id}`);\n    setName(''); // acteur = {...acteurNom}\n\n    fetchActeur(acteurNom.char_id);\n  };\n\n  console.log(acteurNom);\n  console.log(nameSear);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar bg-info-content px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"normal-case text-sm md:text-xl text-white\",\n        children: \"Breaking Bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-none gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter le nom de l'acteur\",\n          value: name,\n          onChange: change,\n          className: \"input input-bordered input-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), acteurs.map(act => {\n        if (name === \"\") {\n          setNameSear('');\n        } else if (act.name.toLowerCase().includes(name.toLowerCase())) {\n          setNameSear(act.name);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flex items-center justify-center px-4 border-l\",\n        onClick: () => Go(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-6 h-6 text-gray-600\",\n          fill: \"currentColor\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"+RgHCYN3ZJpydTf2Mo7r3jOzxkI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/web/Feedback-Hooks/acteursbreakingbad/src/components/Navbar.jsx"],"names":["React","useContext","useEffect","Link","BreakContexte","useState","useNavigate","Navbar","fetchByName","acteurs","name","setName","clearnomActeur","nameSear","setNameSear","acteurNom","acteur","fetchActeur","loading","setLoading","navigate","change","e","target","value","console","log","Go","char_id","map","act","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { BreakContexte } from '../contexte/BreakContexte';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    const {fetchByName, acteurs, name, setName, clearnomActeur, nameSear, setNameSear, acteurNom, acteur, fetchActeur, loading, setLoading} = useContext(BreakContexte);\r\n    \r\n    const navigate = useNavigate();\r\n    const change = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    console.log(name)\r\n    \r\n    useEffect(() => {\r\n        if (nameSear && nameSear !== ''){\r\n            fetchByName(nameSear); \r\n        }\r\n        return () => {\r\n            clearnomActeur();\r\n        }  \r\n    }, [nameSear])\r\n\r\n    const Go = () => {\r\n        navigate(`/acteurs/${acteurNom.char_id}`)\r\n        setName('')\r\n        // acteur = {...acteurNom}\r\n        fetchActeur(acteurNom.char_id)\r\n    }\r\n\r\n    console.log(acteurNom)\r\n    console.log(nameSear)\r\n\r\n    return (\r\n        <div className=\"navbar bg-info-content px-4\">\r\n            <div className=\"flex-1\">\r\n                <p className=\"normal-case text-sm md:text-xl text-white\">Breaking Bad</p>\r\n            </div>\r\n            <div className=\"flex-none gap-2\">\r\n                <div className=\"form-control\">\r\n                    <input \r\n                       type=\"text\"\r\n                       placeholder=\"Enter le nom de l'acteur\"\r\n                       value={name} \r\n                       onChange={change} \r\n                       className=\"input input-bordered input-sm\" \r\n                    />\r\n                </div>\r\n                {acteurs.map((act) => {\r\n                    if(name === \"\"){\r\n                        setNameSear('')\r\n                    } else if(act.name.toLowerCase().includes(name.toLowerCase())){\r\n                        setNameSear(act.name)\r\n                    }\r\n                })}                    \r\n                <button className=\"flex items-center justify-center px-4 border-l\" onClick={() => Go()} >\r\n                    <svg className=\"w-6 h-6 text-gray-600\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 24 24\">\r\n                        <path\r\n                            d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\" />\r\n                    </svg>\r\n                </button>\r\n                {/* </Link> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar"]},"metadata":{},"sourceType":"module"}