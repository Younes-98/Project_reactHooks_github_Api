{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\web\\\\Feedback-Hooks\\\\acteursbreakingbad\\\\src\\\\pages\\\\ActeursDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BreakContexte } from '../contexte/BreakContexte';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActeursDetail = () => {\n  _s();\n\n  const {\n    fetchActeur,\n    acteur\n  } = useContext(BreakContexte);\n  const {\n    charid\n  } = useParams(); // console.log(acteur[0])\n\n  useEffect(() => {\n    fetchActeur(charid);\n  }, [charid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: acteur[0].name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActeursDetail, \"s6Q6D1/ab1GlHi3G6NSFF2wEMUM=\", false, function () {\n  return [useParams];\n});\n\n_c = ActeursDetail;\nexport default ActeursDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActeursDetail\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/web/Feedback-Hooks/acteursbreakingbad/src/pages/ActeursDetail.jsx"],"names":["React","useContext","useEffect","useParams","BreakContexte","ActeursDetail","fetchActeur","acteur","charid","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,2BAA9B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAwBN,UAAU,CAACG,aAAD,CAAxC;AACA,QAAM;AAACI,IAAAA;AAAD,MAAWL,SAAS,EAA1B,CAF0B,CAG1B;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW,CAACE,MAAD,CAAX;AAED,GAHQ,EAGN,CAACA,MAAD,CAHM,CAAT;AAIA,sBACE;AAAA,cACGD,MAAM,CAAC,CAAD,CAAN,CAAUE;AADb;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;GAAMJ,a;UAEaF,S;;;KAFbE,a;AAgBN,eAAeA,aAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { BreakContexte } from '../contexte/BreakContexte';\r\n\r\nconst ActeursDetail = () => {\r\n  const {fetchActeur, acteur} = useContext(BreakContexte);\r\n  const {charid} = useParams();\r\n  // console.log(acteur[0])\r\n\r\n  useEffect(() => {\r\n    fetchActeur(charid);\r\n    \r\n  }, [charid])\r\n  return (\r\n    <div>\r\n      {acteur[0].name}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActeursDetail"]},"metadata":{},"sourceType":"module"}