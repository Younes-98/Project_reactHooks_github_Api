{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\web\\\\Feedback-Hooks\\\\acteursbreakingbad\\\\src\\\\components\\\\Acteur.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BreakContexte } from '../contexte/BreakContexte';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Acteur = _ref => {\n  _s();\n\n  let {\n    charid\n  } = _ref;\n  const {\n    fetchActeur,\n    acteur\n  } = useContext(BreakContexte);\n  console.log(acteur[0]);\n  useEffect(() => {\n    fetchActeur(charid); // return () => {\n    //   dispatch({\n    //     type: 'REMOVE_ACTEUR',\n    //   });\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: acteur[0].name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Acteur, \"FKnKo1i7dQiXDweE6XkL+rExvF0=\");\n\n_c = Acteur;\nexport default Acteur;\n\nvar _c;\n\n$RefreshReg$(_c, \"Acteur\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/web/Feedback-Hooks/acteursbreakingbad/src/components/Acteur.jsx"],"names":["React","useParams","BreakContexte","useContext","Acteur","charid","fetchActeur","acteur","console","log","useEffect","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,MAAMC,MAAM,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACzB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAwBJ,UAAU,CAACD,aAAD,CAAxC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAC,CAAD,CAAlB;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACZJ,IAAAA,WAAW,CAACD,MAAD,CAAX,CADY,CAEZ;AACA;AACA;AACA;AACA;AACH,GAPQ,EAON,EAPM,CAAT;AAQA,sBACI;AAAA,cACKE,MAAM,CAAC,CAAD,CAAN,CAAUI;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjBD;;GAAMP,M;;KAAAA,M;AAmBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BreakContexte } from '../contexte/BreakContexte';\r\nimport { useContext } from 'react';\r\n\r\nconst Acteur = ({charid}) => {\r\n    const {fetchActeur, acteur} = useContext(BreakContexte);\r\n    console.log(acteur[0])\r\n\r\n    useEffect(() => {\r\n        fetchActeur(charid);\r\n        // return () => {\r\n        //   dispatch({\r\n        //     type: 'REMOVE_ACTEUR',\r\n        //   });\r\n        // }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {acteur[0].name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Acteur"]},"metadata":{},"sourceType":"module"}