{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\acteursbreakingbad\\\\src\\\\contexte\\\\BreakContexte.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport BreakReducer from \"./BreakReducer\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BreakContexte = /*#__PURE__*/createContext();\n\nconst BreakProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [loadingbyname, setLoadingbyname] = useState(true);\n  const initialState = {\n    acteurs: [],\n    acteur: {},\n    acteurNom: {},\n    followers: {}\n  };\n  const [state, dispatch] = useReducer(BreakReducer, initialState);\n  const [name, setName] = useState(\"\");\n  const [nameSear, setNameSear] = useState(\"\");\n\n  const fetchActeurs = async () => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(\"https://api.github.com/users\");\n      console.log(response.data);\n      dispatch({\n        type: \"GET_ACTEURS\",\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const fetchActeur = async login => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(`https://api.github.com/users/${login}`);\n      dispatch({\n        type: \"GET_ACTEUR\",\n        payload: response.data\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const fetchFollowers = async login => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(`https://api.github.com/users/${login}/followers`);\n      dispatch({\n        type: \"GET_FOLLOWERS\",\n        payload: response.data\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const fetchByName = async x => {\n    setLoadingbyname(true);\n\n    try {\n      const response = await axios.get(`https://www.breakingbadapi.com/api/characters?name=${x}`);\n      dispatch({\n        type: \"GET_ACTNAME\",\n        payload: response.data[0]\n      }); // console.log(response.data[0])\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoadingbyname(false);\n  };\n\n  const clearActeur = () => {\n    dispatch({\n      type: \"REMOVE_ACTEUR\"\n    });\n  };\n\n  const clearnomActeur = () => {\n    dispatch({\n      type: \"REMOVE_NOMACTEUR\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BreakContexte.Provider, {\n    value: {\n      loading,\n      fetchActeurs,\n      acteurs: state.acteurs,\n      fetchActeur,\n      acteur: state.acteur,\n      clearActeur,\n      acteurNom: state.acteurNom,\n      fetchByName,\n      name,\n      setName,\n      clearnomActeur,\n      nameSear,\n      setNameSear,\n      loadingbyname,\n      setLoadingbyname\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BreakProvider, \"YcilkWNUv7teIL/BJa2zclXgE3c=\");\n\n_c = BreakProvider;\nexport default BreakProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreakProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/acteursbreakingbad/src/contexte/BreakContexte.jsx"],"names":["React","createContext","useState","axios","BreakReducer","useReducer","BreakContexte","BreakProvider","children","loading","setLoading","loadingbyname","setLoadingbyname","initialState","acteurs","acteur","acteurNom","followers","state","dispatch","name","setName","nameSear","setNameSear","fetchActeurs","response","get","console","log","data","type","payload","error","fetchActeur","login","fetchFollowers","fetchByName","x","clearActeur","clearnomActeur"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport BreakReducer from \"./BreakReducer\";\r\nimport { useReducer } from \"react\";\r\n\r\nexport const BreakContexte = createContext();\r\n\r\nconst BreakProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingbyname, setLoadingbyname] = useState(true);\r\n\r\n  const initialState = {\r\n    acteurs: [],\r\n    acteur: {},\r\n    acteurNom: {},\r\n    followers: {},\r\n  };\r\n  const [state, dispatch] = useReducer(BreakReducer, initialState);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameSear, setNameSear] = useState(\"\");\r\n\r\n  const fetchActeurs = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\"https://api.github.com/users\");\r\n      console.log(response.data);\r\n      dispatch({\r\n        type: \"GET_ACTEURS\",\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchActeur = async (login) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`https://api.github.com/users/${login}`);\r\n      dispatch({\r\n        type: \"GET_ACTEUR\",\r\n        payload: response.data,\r\n      });\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchFollowers = async (login) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.github.com/users/${login}/followers`\r\n      );\r\n      dispatch({\r\n        type: \"GET_FOLLOWERS\",\r\n        payload: response.data,\r\n      });\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchByName = async (x) => {\r\n    setLoadingbyname(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://www.breakingbadapi.com/api/characters?name=${x}`\r\n      );\r\n      dispatch({\r\n        type: \"GET_ACTNAME\",\r\n        payload: response.data[0],\r\n      });\r\n      // console.log(response.data[0])\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoadingbyname(false);\r\n  };\r\n\r\n  const clearActeur = () => {\r\n    dispatch({ type: \"REMOVE_ACTEUR\" });\r\n  };\r\n  const clearnomActeur = () => {\r\n    dispatch({ type: \"REMOVE_NOMACTEUR\" });\r\n  };\r\n\r\n  return (\r\n    <BreakContexte.Provider\r\n      value={{\r\n        loading,\r\n        fetchActeurs,\r\n        acteurs: state.acteurs,\r\n        fetchActeur,\r\n        acteur: state.acteur,\r\n        clearActeur,\r\n        acteurNom: state.acteurNom,\r\n        fetchByName,\r\n        name,\r\n        setName,\r\n        clearnomActeur,\r\n        nameSear,\r\n        setNameSear,\r\n        loadingbyname,\r\n        setLoadingbyname,\r\n      }}\r\n    >\r\n      {children}\r\n    </BreakContexte.Provider>\r\n  );\r\n};\r\n\r\nexport default BreakProvider;\r\n"]},"metadata":{},"sourceType":"module"}