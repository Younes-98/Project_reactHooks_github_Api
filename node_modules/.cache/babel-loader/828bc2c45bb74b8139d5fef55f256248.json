{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\web\\\\Feedback-Hooks\\\\acteursbreakingbad\\\\src\\\\pages\\\\ActeursDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Acteur from '../components/Acteur';\nimport { BreakContexte } from '../contexte/BreakContexte';\nimport AlertName from '../components/AlertName';\nimport Spinner from '../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ActeursDetail = () => {\n  _s();\n\n  const {\n    charid\n  } = useParams();\n  console.log(charid);\n  const {\n    loading,\n    fetchActeur,\n    acteur,\n    clearActeur,\n    nameSear,\n    setNameSear\n  } = useContext(BreakContexte); // useEffect(() => {\n  //   fetchActeur(charid);\n  // }, [])\n  // console.log(acteur)\n\n  useEffect(() => {\n    if (charid && charid !== '') {\n      fetchActeur(charid);\n    }\n\n    return () => {\n      clearActeur();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      classname: 'mt-32'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AlertName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Acteur, {\n        id: charid,\n        acteur: acteur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActeursDetail, \"2pbHbXqF2E7Yn3xxVqz3Qw4SMr0=\", false, function () {\n  return [useParams];\n});\n\n_c = ActeursDetail;\nexport default ActeursDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActeursDetail\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/web/Feedback-Hooks/acteursbreakingbad/src/pages/ActeursDetail.jsx"],"names":["React","useContext","useEffect","useParams","Acteur","BreakContexte","AlertName","Spinner","ActeursDetail","charid","console","log","loading","fetchActeur","acteur","clearActeur","nameSear","setNameSear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAWN,SAAS,EAA1B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,QAAM;AAACG,IAAAA,OAAD;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,MAAvB;AAA+BC,IAAAA,WAA/B;AAA4CC,IAAAA,QAA5C;AAAsDC,IAAAA;AAAtD,MAAqEhB,UAAU,CAACI,aAAD,CAArF,CAJ0B,CAM1B;AACA;AACA;AACA;;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,MAAM,IAAIA,MAAM,KAAK,EAAzB,EAA4B;AACxBI,MAAAA,WAAW,CAACJ,MAAD,CAAX;AACH;;AACD,WAAO,MAAM;AACXM,MAAAA,WAAW;AACZ,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;AAUA,sBACE;AAAA,cACGH,OAAO,gBAAG,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YAAH,gBACP;AAAA,8BACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAEH,MAAZ;AAAoB,QAAA,MAAM,EAAEK;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAMN,a;UACaL,S;;;KADbK,a;AAgCN,eAAeA,aAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Acteur from '../components/Acteur';\r\nimport { BreakContexte } from '../contexte/BreakContexte';\r\nimport AlertName from '../components/AlertName';\r\nimport Spinner from '../components/Spinner';\r\n\r\n\r\nconst ActeursDetail = () => {\r\n  const {charid} = useParams();\r\n  console.log(charid)\r\n\r\n  const {loading, fetchActeur, acteur, clearActeur, nameSear, setNameSear} = useContext(BreakContexte);\r\n\r\n  // useEffect(() => {\r\n  //   fetchActeur(charid);\r\n  // }, [])\r\n  // console.log(acteur)\r\n\r\n  useEffect(() => {\r\n      if (charid && charid !== ''){\r\n          fetchActeur(charid);\r\n      }\r\n      return () => {\r\n        clearActeur();\r\n      }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {loading ? <Spinner classname={'mt-32'}/> :\r\n      (<>\r\n        <AlertName />\r\n        <Acteur id={charid} acteur={acteur} />\r\n      </>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActeursDetail"]},"metadata":{},"sourceType":"module"}